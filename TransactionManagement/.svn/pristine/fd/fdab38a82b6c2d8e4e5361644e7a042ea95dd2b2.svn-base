package compression.control;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.bind.JAXBException;
import javax.xml.namespace.QName;

import org.apache.cxf.binding.soap.SoapMessage;
import org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor;
import org.apache.cxf.headers.Header;
import org.apache.cxf.interceptor.Fault;
import org.apache.cxf.jaxb.JAXBDataBinding;
import org.apache.cxf.phase.Phase;
import org.w3c.dom.Element;

public class CompressionResponseOutInterceptor extends AbstractSoapInterceptor {
	static String transactionID;
	static List<String> transactionList = new ArrayList<String>();
	public CompressionResponseOutInterceptor() {
		super(Phase.PRE_LOGICAL);
		//extras.add(new SAAJOutInterceptor());
	}

	@Override
	synchronized public void handleMessage(SoapMessage paramT) throws Fault {
		// TODO Auto-generated method stub
		// TODO Auto-generated method stub
				List<Header> head = new ArrayList<Header>();

				head.addAll(paramT.getHeaders());
				for (Iterator<Header> i = head.iterator(); i.hasNext();) {
					Header h = i.next();
					Element n = (Element) h.getObject();
					if (n.getLocalName().equals("transactionID")) {
						//code to store transactionID
						//transactionList.add(n.getTextContent());
						
						/*
						 * send transaction id to the reconfigurator here
						 */
						String transactionID = n.getTextContent();
						try {
							paramT.getHeaders().add(new Header(new QName("transactionID"), transactionID, new JAXBDataBinding(String.class)));
						} catch (JAXBException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						
					}
				}
	}
}
